---
###############################################################################
#
# Ansible remediation role for the results of evaluation of profile xccdf_org.ssgproject.content_profile_C2S 
# XCCDF Version:  1.2
#
# Evaluation Start Time:  2019-09-02T20:04:16
# Evaluation End Time:  2019-09-02T20:04:47
#
# This file was generated by OpenSCAP 1.2.17 using:
# 	$ oscap xccdf generate fix --result-id xccdf_org.open-scap_testresult_xccdf_org.ssgproject.content_profile_C2S --template urn:xccdf:fix:script:ansible xccdf-results.xml 
#
# This script is generated from the results of a profile evaluation.
# It attempts to remediate all issues from the selected rules that failed the test.
#
# How to apply this remediation role:
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################


 - hosts: all
   vars:
   tasks:
    - name: Ensure tcp_wrappers is installed
      package:
        name: "{{item}}"
        state: present
      with_items:
        - tcp_wrappers
      tags:
        - package_tcp_wrappers_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-27361-5
        - NIST-800-53-CM-6(b)
        - DISA-STIG-RHEL-07-TBD
    
    - name: Disable service rhnsd
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - rhnsd
      tags:
        - service_rhnsd_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-80269-4
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
    
    
    - name: Disable socket of service rhnsd if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - rhnsd.socket
      tags:
        - service_rhnsd_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-80269-4
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
    
    - name: Disable SSH Access via Empty Passwords
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^PermitEmptyPasswords
        line: PermitEmptyPasswords no
        validate: sshd -t -f %s
      tags:
        - sshd_disable_empty_passwords
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27471-2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010300
    
    - name: Set SSH Client Alive Count
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^ClientAliveCountMax
        line: ClientAliveCountMax 0
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_set_keepalive
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27082-7
        - NIST-800-53-AC-2(5)
        - NIST-800-53-SA-8
        - NIST-800-53-AC-12
        - NIST-800-171-3.1.11
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040340
    
    - name: XCCDF Value sshd_idle_timeout_value # promote to variable
      set_fact:
        sshd_idle_timeout_value: !!str |-
            300
      tags:
        - always
    
    - name: Set SSH Idle Timeout Interval
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^ClientAliveInterval
        line: "ClientAliveInterval {{ sshd_idle_timeout_value }}"
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_set_idle_timeout
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27433-2
        - NIST-800-53-AC-2(5)
        - NIST-800-53-SA-8(i)
        - NIST-800-53-AC-12
        - NIST-800-171-3.1.11
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040320
    
    - name: Enable SSH Warning Banner
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^Banner
        line: Banner /etc/issue
        validate: sshd -t -f %s
      tags:
        - sshd_enable_warning_banner
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27314-4
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-171-3.1.9
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040170
    
    - name: XCCDF Value sshd_approved_macs # promote to variable
      set_fact:
        sshd_approved_macs: !!str |-
            hmac-sha2-512,hmac-sha2-256,hmac-sha1,hmac-sha1-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com
      tags:
        - always
    
    - name: "Use Only Approved MACs"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^MACs
        line: "MACs {{ sshd_approved_macs }}"
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_approved_macs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27455-5
        - NIST-800-53-AC-17(2)
        - NIST-800-53-IA-7
        - NIST-800-53-SC-13
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.11
        - NIST-800-171-3.13.8
        - DISA-STIG-RHEL-07-040400
    
    - name: Do Not Allow SSH Environment Options
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^PermitUserEnvironment
        line: PermitUserEnvironment no
        validate: sshd -t -f %s
      tags:
        - sshd_do_not_permit_user_env
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27363-1
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010460
    
    - name: Use Only Approved Ciphers
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^Ciphers
        line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_approved_ciphers
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27295-5
        - NIST-800-53-AC-3
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AU-10(5)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-7
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.11
        - NIST-800-171-3.13.8
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040110
    
    - name: "Disable SSH Root Login"
      lineinfile:
        create: yes
        dest: "/etc/ssh/sshd_config"
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
        insertafter: '(?i)^#?authentication'
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27445-6
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6(2)
        - NIST-800-53-IA-2(1)
        - NIST-800-53-IA-2(5)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040370
    
    - name: Ensure aide is installed
      package:
        name: "{{item}}"
        state: present
      with_items:
        - aide
      tags:
        - package_aide_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-27096-7
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
    
    - name: "Ensure AIDE is installed"
      package:
        name: "{{item}}"
        state: present
      with_items:
        - aide
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-26952-2
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-07-020030
    
    - name: "Configure Periodic Execution of AIDE"
      cron:
        name: "run AIDE check"
        minute: 05
        hour: 04
        weekday: 0
        user: root
        job: "/usr/sbin/aide --check"
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-26952-2
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-07-020030
    
    - name: "Security patches are up to date"
      package:
        name: "*"
        state: "latest"
      tags:
        - security_patches_up_to_date
        - high_severity
        - patch_strategy
        - low_complexity
        - high_disruption
        - CCE-26895-3
        - NIST-800-53-SI-2
        - NIST-800-53-SI-2(c)
        - NIST-800-53-MA-1(b)
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-020260
    
    - name: "Read permission of GPG key directory"
      stat:
        path: /etc/pki/rpm-gpg/
      register: gpg_key_directory_permission
      check_mode: no
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - CCE-26957-1
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    # It should fail if it doesn't find any fingerprints in file - maybe file was not parsed well.
    
    - name: Read signatures in GPG key
      shell: gpg --with-fingerprint '/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release' | grep 'Key fingerprint =' | tr -s ' ' | sed 's;.*= ;;g'
      changed_when: False
      register: gpg_fingerprints
      check_mode: no
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - CCE-26957-1
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    - name: Set Fact - Valid fingerprints
      set_fact:
         gpg_valid_fingerprints: ("567E 347A D004 4ADE 55BA 8A5F 199E 2F91 FD43 1D51" "43A6 E49C 4A38 F4BE 9ABF 2A53 4568 9C88 2FA6 58E0")
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - CCE-26957-1
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    - name: Import RedHat GPG key
      rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      when:
        (gpg_key_directory_permission.stat.mode <= '0755')
        and (( gpg_fingerprints.stdout_lines | difference(gpg_valid_fingerprints)) | length == 0)
        and (gpg_fingerprints.stdout_lines | length > 0)
        and (ansible_distribution == "RedHat")
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - CCE-26957-1
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    - name: XCCDF Value rsyslog_remote_loghost_address # promote to variable
      set_fact:
        rsyslog_remote_loghost_address: !!str |-
            logcollector
      tags:
        - always
    
    - name: "Set rsyslog remote loghost"
      lineinfile:
        dest: /etc/rsyslog.conf
        regexp: "^\\*\\.\\*"
        line: "*.* @@{{ rsyslog_remote_loghost_address }}"
        create: yes
      tags:
        - rsyslog_remote_loghost
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27343-3
        - NIST-800-53-AU-3(2)
        - NIST-800-53-AU-4(1)
        - NIST-800-53-AU-9
        - DISA-STIG-RHEL-07-031000
    
    - name: XCCDF Value sysctl_net_ipv6_conf_all_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_all_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: "{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80182-9
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv6_conf_default_accept_ra_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_default_accept_ra_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: "{{ sysctl_net_ipv6_conf_default_accept_ra_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_default_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80181-1
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv6_conf_all_accept_ra_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_all_accept_ra_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: "{{ sysctl_net_ipv6_conf_all_accept_ra_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80180-3
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv6_conf_default_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_default_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: "{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80183-7
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: Ensure sysctl net.ipv6.conf.all.disable_ipv6 is set to 1
      sysctl:
        name: net.ipv6.conf.all.disable_ipv6
        value: 1
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_disable_ipv6
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80175-3
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value # promote to variable
      set_fact:
        sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: "{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80166-2
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_log_martians_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_log_martians_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: "{{ sysctl_net_ipv4_conf_default_log_martians_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80161-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(3)
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_secure_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_secure_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: "{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_secure_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80159-7
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_secure_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_secure_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: "{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_secure_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80164-7
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80158-9
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040641
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_log_martians_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_log_martians_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: "{{ sysctl_net_ipv4_conf_all_log_martians_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80160-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(3)
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value # promote to variable
      set_fact:
        sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: "{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80165-4
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040630
    
    - name: XCCDF Value sysctl_net_ipv4_tcp_syncookies_value # promote to variable
      set_fact:
        sysctl_net_ipv4_tcp_syncookies_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: "{{ sysctl_net_ipv4_tcp_syncookies_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_tcp_syncookies
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-27495-1
        - NIST-800-53-AC-4
        - NIST-800-53-SC-5(1)(2)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80163-9
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040640
    
    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_ip_forward
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80157-1
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-32
        - NIST-800-171-3.1.20
        - DISA-STIG-RHEL-07-040740
    
    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80156-3
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(1)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040660
    
    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80156-3
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040650
    
    - name: Ensure kernel module 'dccp' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - dccp
      tags:
        - kernel_module_dccp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-26828-4
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
        - CJIS-5.10.1
        - DISA-STIG-RHEL-07-020101
    
    - name: Ensure kernel module 'sctp' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - sctp
      tags:
        - kernel_module_sctp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-27106-4
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
        - CJIS-5.10.1
    
    - name: XCCDF Value var_selinux_state # promote to variable
      set_fact:
        var_selinux_state: !!str |-
            enforcing
      tags:
        - always
    
    - name: "Ensure SELinux State is Enforcing"
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: '^SELINUX='
        line: "SELINUX={{ var_selinux_state }}"
        create: yes
      tags:
        - selinux_state
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27334-2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)
        - NIST-800-53-AC-3(4)
        - NIST-800-53-AC-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9
        - NIST-800-53-SI-6(a)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - DISA-STIG-RHEL-07-020210
    
    - name: "Direct root Logins Not Allowed"
      shell: echo > /etc/securetty
      tags:
        - no_direct_root_logins
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27294-8
        - NIST-800-53-IA-2(1)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.6
    
    - name: XCCDF Value var_account_disable_post_pw_expiration # promote to variable
      set_fact:
        var_account_disable_post_pw_expiration: !!str |-
            30
      tags:
        - always
    
    - name: Set Account Expiration Following Inactivity
      lineinfile:
        create: yes
        dest: /etc/default/useradd
        regexp: ^INACTIVE
        line: "INACTIVE={{ var_account_disable_post_pw_expiration }}"
      tags:
        - account_disable_post_pw_expiration
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27355-7
        - NIST-800-53-AC-2(2)
        - NIST-800-53-AC-2(3)
        - NIST-800-53-IA-4(e)
        - NIST-800-171-3.5.6
        - PCI-DSS-Req-8.1.4
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010310
    
    - name: XCCDF Value var_accounts_minimum_age_login_defs # promote to variable
      set_fact:
        var_accounts_minimum_age_login_defs: !!str |-
            7
      tags:
        - always
    
    - name: Set Password Minimum Age
      lineinfile:
          create: yes
          dest: /etc/login.defs
          regexp: ^#?PASS_MIN_DAYS
          line: "PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}"
      tags:
        - accounts_minimum_age_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27002-5
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-171-3.5.8
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010230
    
    - name: XCCDF Value var_accounts_maximum_age_login_defs # promote to variable
      set_fact:
        var_accounts_maximum_age_login_defs: !!str |-
            90
      tags:
        - always
    
    - name: Set Password Maximum Age
      lineinfile:
        create: yes
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: "PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}"
      tags:
        - accounts_maximum_age_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27051-2
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(g)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-171-3.5.6
        - PCI-DSS-Req-8.2.4
        - CJIS-5.6.2.1
        - DISA-STIG-RHEL-07-010250
    
    - name: XCCDF Value var_password_pam_unix_remember # promote to variable
      set_fact:
        var_password_pam_unix_remember: !!str |-
            5
      tags:
        - always
    
    - name: "Do not allow users to reuse recent passwords - system-auth (change)"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: '^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$'
        replace: '\g<1>{{ var_password_pam_unix_remember }}\g<3>'
      tags:
        - accounts_password_pam_unix_remember
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - CCE-26923-3
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-171-3.5.8
        - PCI-DSS-Req-8.2.5
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010270
    
    - name: "Do not allow users to reuse recent passwords - system-auth (add)"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: '^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$'
        replace: '\g<0> remember={{ var_password_pam_unix_remember }}'
      tags:
        - accounts_password_pam_unix_remember
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - CCE-26923-3
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-171-3.5.8
        - PCI-DSS-Req-8.2.5
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010270
    
    - name: XCCDF Value var_accounts_passwords_pam_faillock_deny # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_deny: !!str |-
            5
      tags:
        - always
    - name: XCCDF Value var_accounts_passwords_pam_faillock_unlock_time # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_unlock_time: !!str |-
            900
      tags:
        - always
    - name: XCCDF Value var_accounts_passwords_pam_faillock_fail_interval # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_fail_interval: !!str |-
            900
      tags:
        - always
    
    - name: set auth pam_faillock before pam_unix.so
      pamd:
        name: system-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: 'preauth
            silent
            deny: {{ var_accounts_passwords_pam_faillock_deny }}
            unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
        state: before
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27350-8
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010320
    
    - name: set auth pam_faillock after pam_unix.so
      pamd:
        name: system-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: 'preauth
            silent
            deny: {{ var_accounts_passwords_pam_faillock_deny }}
            unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
        state: after
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27350-8
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010320
    
    - name: set account pam_faillock before pam_unix.so
      pamd:
        name: system-auth
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27350-8
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010320
    
    - name: XCCDF Value var_password_pam_minlen # promote to variable
      set_fact:
        var_password_pam_minlen: !!str |-
            14
      tags:
        - always
    
    - name: Ensure PAM variable minlen is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*minlen'
        line: "minlen = {{ var_password_pam_minlen }}"
    
      tags:
        - accounts_password_pam_minlen
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27293-0
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010280
    
    - name: XCCDF Value var_password_pam_dcredit # promote to variable
      set_fact:
        var_password_pam_dcredit: !!str |-
            -1
      tags:
        - always
    
    - name: Ensure PAM variable dcredit is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*dcredit'
        line: "dcredit = {{ var_password_pam_dcredit }}"
    
      tags:
        - accounts_password_pam_dcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27214-6
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-194
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010140
    
    - name: XCCDF Value var_password_pam_lcredit # promote to variable
      set_fact:
        var_password_pam_lcredit: !!str |-
            -1
      tags:
        - always
    
    - name: Ensure PAM variable lcredit is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*lcredit'
        line: "lcredit = {{ var_password_pam_lcredit }}"
    
      tags:
        - accounts_password_pam_lcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27345-8
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010130
    
    - name: XCCDF Value var_password_pam_ucredit # promote to variable
      set_fact:
        var_password_pam_ucredit: !!str |-
            -1
      tags:
        - always
    
    - name: Ensure PAM variable ucredit is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*ucredit'
        line: "ucredit = {{ var_password_pam_ucredit }}"
    
      tags:
        - accounts_password_pam_ucredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27200-5
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010120
    
    - name: XCCDF Value var_auditd_admin_space_left_action # promote to variable
      set_fact:
        var_auditd_admin_space_left_action: !!str |-
            single
      tags:
        - always
    
    - name: Configure auditd admin_space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "admin_space_left_action = {{ var_auditd_admin_space_left_action }}"
        regexp: "^admin_space_left_action*"
      #notify: reload auditd
      tags:
        - auditd_data_retention_admin_space_left_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27370-6
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030340
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchown
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchown.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchown.files | map(attribute='path') | list | first }}"
      when: find_fchown.matched > 0
    
    - name: Inserts/replaces the fchown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    
    - name: Inserts/replaces the fchown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    
    - name: Inserts/replaces the fchown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit setxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_setxattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_setxattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_setxattr.files | map(attribute='path') | list | first }}"
      when: find_setxattr.matched > 0
    
    - name: Inserts/replaces the setxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    
    - name: Inserts/replaces the setxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    
    - name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fsetxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fsetxattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fsetxattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fsetxattr.files | map(attribute='path') | list | first }}"
      when: find_fsetxattr.matched > 0
    
    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    
    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    
    - name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit removexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_removexattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_removexattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_removexattr.files | map(attribute='path') | list | first }}"
      when: find_removexattr.matched > 0
    
    - name: Inserts/replaces the removexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    
    - name: Inserts/replaces the removexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    
    - name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lsetxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lsetxattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lsetxattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lsetxattr.files | map(attribute='path') | list | first }}"
      when: find_lsetxattr.matched > 0
    
    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    
    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    
    - name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_chmod
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chmod.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chmod.files | map(attribute='path') | list | first }}"
      when: find_chmod.matched > 0
    
    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    
    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    
    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchmodat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchmodat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchmodat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchmodat.files | map(attribute='path') | list | first }}"
      when: find_fchmodat.matched > 0
    
    - name: Inserts/replaces the fchmodat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    
    - name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    
    - name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_chown
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chown.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chown.files | map(attribute='path') | list | first }}"
      when: find_chown.matched > 0
    
    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    
    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    
    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fremovexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fremovexattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fremovexattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fremovexattr.files | map(attribute='path') | list | first }}"
      when: find_fremovexattr.matched > 0
    
    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    
    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    
    - name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchownat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchownat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchownat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchownat.files | map(attribute='path') | list | first }}"
      when: find_fchownat.matched > 0
    
    - name: Inserts/replaces the fchownat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    
    - name: Inserts/replaces the fchownat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    
    - name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchmod tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchmod
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchmod.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchmod.files | map(attribute='path') | list | first }}"
      when: find_fchmod.matched > 0
    
    - name: Inserts/replaces the fchmod rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    
    - name: Inserts/replaces the fchmod rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    
    - name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lchown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lchown
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lchown.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lchown.files | map(attribute='path') | list | first }}"
      when: find_lchown.matched > 0
    
    - name: Inserts/replaces the lchown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    
    - name: Inserts/replaces the lchown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    
    - name: Inserts/replaces the lchown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lremovexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lremovexattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lremovexattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lremovexattr.files | map(attribute='path') | list | first }}"
      when: find_lremovexattr.matched > 0
    
    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    
    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    
    - name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    
    
    - name: Search for privileged commands
      shell: "find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null | cat"
      check_mode: no
      register: find_result
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path={{ item }} .*$"
        patterns: "*.rules"
      with_items:
        - "{{ find_result.stdout_lines }}"
      register: files_result
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
      
    - name: Overwrites the rule in rules.d
      lineinfile:
        path: "{{ item.1.path }}"
        line: '-a always,exit -F path={{ item.0.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: no
        regexp: "^.*path={{ item.0.item }} .*$"
      with_subelements:
        - "{{ files_result.results }}"
        - files
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
        
    - name: Adds the rule in rules.d
      lineinfile:
        path: /etc/audit/rules.d/privileged.rules
        line: '-a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      with_items:
        - "{{ files_result.results }}"
      when: item.matched == 0
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
      
    # Adds/overwrites the rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
        regexp: "^.*path={{ item.item }} .*$"
      with_items:
        - "{{ files_result.results }}"
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
    
    
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit truncate tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_truncate
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_truncate.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_truncate.files | map(attribute='path') | list | first }}"
      when: find_truncate.matched > 0
    
    - name: Inserts/replaces the truncate rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80389-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    
    - name: Inserts/replaces the truncate rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80389-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80389-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    
    - name: Inserts/replaces the truncate rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80389-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit creat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_creat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_creat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_creat.files | map(attribute='path') | list | first }}"
      when: find_creat.matched > 0
    
    - name: Inserts/replaces the creat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80385-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    
    - name: Inserts/replaces the creat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80385-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the creat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80385-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    
    - name: Inserts/replaces the creat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80385-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit open tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_open
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_open.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_open.files | map(attribute='path') | list | first }}"
      when: find_open.matched > 0
    
    - name: Inserts/replaces the open rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80386-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    
    - name: Inserts/replaces the open rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80386-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80386-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    
    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80386-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit open_by_handle_at tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_open_by_handle_at
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_open_by_handle_at.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_open_by_handle_at.files | map(attribute='path') | list | first }}"
      when: find_open_by_handle_at.matched > 0
    
    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80388-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    
    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80388-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80388-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    
    - name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80388-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit ftruncate tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_ftruncate
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_ftruncate.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_ftruncate.files | map(attribute='path') | list | first }}"
      when: find_ftruncate.matched > 0
    
    - name: Inserts/replaces the ftruncate rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80390-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    
    - name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80390-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80390-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    
    - name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80390-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit openat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_openat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_openat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_openat.files | map(attribute='path') | list | first }}"
      when: find_openat.matched > 0
    
    - name: Inserts/replaces the openat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80387-4
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    
    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80387-4
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80387-4
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    
    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80387-4
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit shadow tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_shadow
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_shadow.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_shadow.files | map(attribute='path') | list | first }}"
      when: find_shadow.matched > 0
    
    - name: Inserts/replaces the shadow rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/shadow -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80431-0
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030873
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/shadow -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80431-0
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030873
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit opasswd tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_opasswd
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_opasswd.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_opasswd.files | map(attribute='path') | list | first }}"
      when: find_opasswd.matched > 0
    
    - name: Inserts/replaces the opasswd rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80430-2
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030874
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80430-2
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030874
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit gshadow tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_gshadow
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_gshadow.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_gshadow.files | map(attribute='path') | list | first }}"
      when: find_gshadow.matched > 0
    
    - name: Inserts/replaces the gshadow rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/gshadow -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80432-8
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030872
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/gshadow -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80432-8
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030872
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit passwd tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_passwd
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_passwd.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_passwd.files | map(attribute='path') | list | first }}"
      when: find_passwd.matched > 0
    
    - name: Inserts/replaces the passwd rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/passwd -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80435-1
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030870
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/passwd -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80435-1
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030870
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit group tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_group
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_group.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_group.files | map(attribute='path') | list | first }}"
      when: find_group.matched > 0
    
    - name: Inserts/replaces the group rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/group -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80433-6
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030871
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the group rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/group -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80433-6
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030871
    
    - name: Ensure sysctl fs.suid_dumpable is set to 0
      sysctl:
        name: fs.suid_dumpable
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_fs_suid_dumpable
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-26900-1
        - NIST-800-53-SI-11
    
    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: 2
        state: present
        reload: yes
      tags:
        - sysctl_kernel_randomize_va_space
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-27127-0
        - NIST-800-53-SC-30(2)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-040201
    
    - name: Ensure kernel module 'hfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - hfs
      tags:
        - kernel_module_hfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80140-7
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'freevxfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - freevxfs
      tags:
        - kernel_module_freevxfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80138-1
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'udf' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - udf
      tags:
        - kernel_module_udf_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80143-1
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'squashfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - squashfs
      tags:
        - kernel_module_squashfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80142-3
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'hfsplus' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - hfsplus
      tags:
        - kernel_module_hfsplus_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80141-5
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'jffs2' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - jffs2
      tags:
        - kernel_module_jffs2_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80139-9
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - cramfs
      tags:
        - kernel_module_cramfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80137-3
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /tmp ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80149-8
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device previous mount option
      shell: mount | grep ' /tmp ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80149-8
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device fstype
      shell: mount | grep ' /tmp ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80149-8
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: Ensure permission nodev are set on /tmp
      mount:
        path: "/tmp"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},nodev"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80149-8
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /tmp ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80150-6
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device previous mount option
      shell: mount | grep ' /tmp ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80150-6
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device fstype
      shell: mount | grep ' /tmp ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80150-6
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: Ensure permission noexec are set on /tmp
      mount:
        path: "/tmp"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},noexec"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80150-6
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /dev/shm ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_dev_shm_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80153-0
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device previous mount option
      shell: mount | grep ' /dev/shm ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_dev_shm_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80153-0
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device fstype
      shell: mount | grep ' /dev/shm ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_dev_shm_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80153-0
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: Ensure permission noexec are set on /dev/shm
      mount:
        path: "/dev/shm"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},noexec"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_dev_shm_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80153-0
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /tmp ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80151-4
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device previous mount option
      shell: mount | grep ' /tmp ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80151-4
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device fstype
      shell: mount | grep ' /tmp ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80151-4
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: Ensure permission nosuid are set on /tmp
      mount:
        path: "/tmp"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},nosuid"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80151-4
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /var/tmp ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device previous mount option
      shell: mount | grep ' /var/tmp ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device fstype
      shell: mount | grep ' /var/tmp ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: Ensure permission nodev are set on /var/tmp
      mount:
        path: "/var/tmp"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},nodev"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /var/tmp ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device previous mount option
      shell: mount | grep ' /var/tmp ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device fstype
      shell: mount | grep ' /var/tmp ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: Ensure permission noexec are set on /var/tmp
      mount:
        path: "/var/tmp"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},noexec"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /home ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device previous mount option
      shell: mount | grep ' /home ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device fstype
      shell: mount | grep ' /home ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: Ensure permission nodev are set on /home
      mount:
        path: "/home"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},nodev"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' /var/tmp ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device previous mount option
      shell: mount | grep ' /var/tmp ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: get back device fstype
      shell: mount | grep ' /var/tmp ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
    - name: Ensure permission nosuid are set on /var/tmp
      mount:
        path: "/var/tmp"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},nosuid"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
    
